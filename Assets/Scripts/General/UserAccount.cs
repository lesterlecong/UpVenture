//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using Couchbase.Lite;
using Couchbase.Lite.Unity;
using Couchbase.Lite.Util;

using System.Collections;
using System.Collections.Generic;

namespace AssemblyCSharp {

	public class UserAccount {

		private UserDefineKeys userDefineKey;
		private string userEmail ="";
		private string userId = "";
		private string userName = "";
		private string userToken = "";

		private CouchbaseDatabase couchbaseDatabase;
		private GameObject couchbaseGameObject;

		#region Public Method
		public UserAccount (CouchbaseDatabase  couchbase)
		{
			couchbaseDatabase = couchbase;
		}

		public string Create(){
			return GenerateNewUUID ();
		}

		public void Update(string UUID){
			//Get Existing database using uuid
			//Get current userID
			//Remove FBID::userID
			//Get current userEmail
			//Remove FBEmail::userEmail
			//Update the info inside uuid document
			//Create new FBID::userID
			//Create new FBID::userEmail
		}

		public string GetUUID(){
			Database database = couchbaseDatabase.GetCouchbaseDatabase ();
			string UUID = "";
			
			
			couchbaseDatabase.CouchbaseDocument = database.GetExistingDocument (userDefineKey.FBUserID + "::" + UserID);
			if (couchbaseDatabase.CouchbaseDocument != null) {
				UUID = couchbaseDatabase.readDataAsString(userDefineKey.UUID);
			}
			
			if(string.IsNullOrEmpty(UUID)){
				couchbaseDatabase.CouchbaseDocument = database.GetExistingDocument (userDefineKey.FBEmail + "::" + UserEmail);
				if (couchbaseDatabase.CouchbaseDocument != null) {
					UUID = couchbaseDatabase.readDataAsString(userDefineKey.UUID);
				}
			}
			
			return UUID;
		}
		#endregion

		#region Public Properties
		public string UserName{
			set{
				userName = value;
			}
			get{
				return userName;
			}
		}

		public string UserEmail{
			set{
				userEmail = value;
			}
			get{
				return userEmail;
			}

		}

		public string UserID{
			set{
				userId = value;
			}
			get{
				return userId;
			}
		}

		public string UserToken{
			set{
				userToken = value;
			}
			get{
				return userToken;
			}
		}
		#endregion

		#region Private Methods
		
		string GetPreference(string key){
			return PlayerPrefs.GetString (key);
		}



		string GenerateNewUUID(){
			Document newDocument = couchbaseDatabase.GetCouchbaseDatabase().CreateDocument ();
			string docID = "";
			
			
			newDocument.Update ((UnsavedRevision newRevision) => {
				Dictionary<string, object> properties = (Dictionary<string, object>)newRevision.Properties;
				properties [userDefineKey.FBUsername] = UserName;
				properties [userDefineKey.FBUserID] = UserID;
				properties [userDefineKey.FBEmail] = UserEmail;
				properties [userDefineKey.FBToken] = UserToken;
				docID = properties["_id"].ToString();
				return true;
			});
			
			couchbaseDatabase.DocumentID = userDefineKey.FBUserID + "::" + UserID;
			couchbaseDatabase.CreateDocument ();
			couchbaseDatabase.saveData (userDefineKey.UUID, docID);
			
			if(String.IsNullOrEmpty(UserEmail)){
				couchbaseDatabase.DocumentID = userDefineKey.FBEmail + "::" + UserID + "@noemail.com";
			}else{
				couchbaseDatabase.DocumentID = userDefineKey.FBEmail + "::" + UserEmail;
			}
			couchbaseDatabase.CreateDocument ();
			couchbaseDatabase.saveData (userDefineKey.UUID, docID);
			
			
			return docID;
		}
		#endregion

	}
}

