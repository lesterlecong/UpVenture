//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;

namespace AssemblyCSharp {

	public class FBUserAccount: UserAccount {

		private string userToken = "";

		public FBUserAccount(){

		}

		public FBUserAccount (CouchbaseDatabase couchbase){
			couchbaseDatabase = couchbase;
		}

		public override void Update(string UUID){


			Debug.Log ("ID to Delete: " + UserAccountDefineKeys.FBID + "::" + UserAccountDefineKeys.TemporaryID);
			Debug.Log ("Email to Delete: " + UserAccountDefineKeys.FBEmail + "::" + UserAccountDefineKeys.TemporaryEmail);

			couchbaseDatabase.DeleteDocumentWithID (UserAccountDefineKeys.FBID + "::" + UserAccountDefineKeys.TemporaryID);
			couchbaseDatabase.DeleteDocumentWithID (UserAccountDefineKeys.FBEmail + "::" + UserAccountDefineKeys.TemporaryEmail);

			couchbaseDatabase.SelectDocumentWithID (UUID);
			couchbaseDatabase.SaveData (UserAccountDefineKeys.FBID, UserID);
			couchbaseDatabase.SaveData (UserAccountDefineKeys.FBEmail, UserEmail);
			couchbaseDatabase.SaveData(UserAccountDefineKeys.Channels, new List<string> {UserID});

			IDDocumentLookUp (UUID);
			EmailDocumentLookUp (UUID);
		}

		public override string GetUUID ()
		{
			string UUID = "";
			
			couchbaseDatabase.SelectDocumentWithID(UserAccountDefineKeys.FBID + "::" + UserID);
			OnScreenLog.write ("On FBUserAccount:Selecting " + UserAccountDefineKeys.FBID + "::" + UserID);

			if (!couchbaseDatabase.IsDocumentNull ()) {
				UUID = couchbaseDatabase.ReadDataAsString (UserAccountDefineKeys.UUID);
				OnScreenLog.write("On FBUserAccount: FBID::" + UserID + "is not null and UUID = " + UUID);
				OnScreenLog.write ("Read ID:" + couchbaseDatabase.ReadDataAsString(UserAccountDefineKeys.FBID));
			} else {
				OnScreenLog.write("On FBUserAccount: FBID::" + UserID + "is null");
			}
			
			if(string.IsNullOrEmpty(UUID)){
				couchbaseDatabase.SelectDocumentWithID(UserAccountDefineKeys.FBEmail + "::" + UserEmail);
				if (!couchbaseDatabase.IsDocumentNull()) {
					UUID = couchbaseDatabase.ReadDataAsString(UserAccountDefineKeys.UUID);
					OnScreenLog.write("On FBUserAccount: FBEmail::" + UserEmail + "is not null and UUID = " + UUID);
				}else{
					OnScreenLog.write("On FBUserAccount: FBEmail::" + UserEmail + "is null");
				}
			}
			
			return UUID;
		}

		public string UserToken{
			set{
				userToken = value;
			}
			get{
				return userToken;
			}
		}

		protected override string GenerateNewUUID(){
			
			string docID = couchbaseDatabase.CreateDocument();
			couchbaseDatabase.SelectDocumentWithID (docID);

			couchbaseDatabase.SaveData(UserAccountDefineKeys.FBUsername, UserName);
			couchbaseDatabase.SaveData(UserAccountDefineKeys.FBID, UserID);
			couchbaseDatabase.SaveData(UserAccountDefineKeys.FBEmail, UserEmail);
			couchbaseDatabase.SaveData (UserAccountDefineKeys.Version, Version);
			IDDocumentLookUp (docID);
			EmailDocumentLookUp (docID);
			
			return docID;
		}
		
		protected override void IDDocumentLookUp(string ID){
			couchbaseDatabase.CreateDocumentWithID(UserAccountDefineKeys.FBID + "::" + UserID);
			couchbaseDatabase.SelectDocumentWithID (UserAccountDefineKeys.FBID + "::" + UserID);
			couchbaseDatabase.SaveData (UserAccountDefineKeys.FBID, UserID);
			couchbaseDatabase.SaveData (UserAccountDefineKeys.UUID, ID);
			couchbaseDatabase.SaveData(UserAccountDefineKeys.Channels, new List<string> {UserID});
		}
		
		protected override void EmailDocumentLookUp(string ID){
			if(String.IsNullOrEmpty(UserEmail)){
				couchbaseDatabase.CreateDocumentWithID(UserAccountDefineKeys.FBEmail + "::" + UserID + "@noemail.com");
				couchbaseDatabase.SelectDocumentWithID(UserAccountDefineKeys.FBEmail + "::" + UserID + "@noemail.com");
			}else{
				couchbaseDatabase.CreateDocumentWithID(UserAccountDefineKeys.FBEmail + "::" + UserEmail);
				couchbaseDatabase.SelectDocumentWithID(UserAccountDefineKeys.FBEmail + "::" + UserEmail);
			}

			couchbaseDatabase.SaveData (UserAccountDefineKeys.FBID, UserID);
			couchbaseDatabase.SaveData (UserAccountDefineKeys.UUID, ID);
			couchbaseDatabase.SaveData(UserAccountDefineKeys.Channels, new List<string> {UserID});
		}
		
	}
}

